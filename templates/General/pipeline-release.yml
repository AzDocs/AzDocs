# Example template to deploy release pipeline
parameters:
  - name: SubscriptionName
    type: string
  - name: EnvironmentName
    type: string
    default: "dev"
  - name: DeployInfra
    type: boolean
    default: true
  - name: TeamName
    type: string
  - name: ProjectName
    type: string
  - name: Location
    type: string
    default: westeurope
  - name: EnvironmentResourceType
    type: string
    default: ""
  - name: EnvironmentTags
    type: string
    default: ""

jobs:
  - deployment:
    displayName: "${{ parameters.EnvironmentName }}"
    environment:
      name: ${{ parameters.EnvironmentName }}
    ${{ if ne(parameters.EnvironmentResourceType, '') }}:
      resourceType: ${{ parameters.EnvironmentResourceType }}
    ${{ if ne(parameters.EnvironmentTags, '') }}:
      tags: ${{ parameters.EnvironmentTags }}
    variables:
      # Add your variables here.

      # Basics
      - name: DeployInfra
        value: "${{ parameters.DeployInfra }}"
      - name: ResourceGroup.Name
        value: ${{ parameters.TeamName }}-${{ parameters.ProjectName }}-${{ parameters.EnvironmentName }}
      - name: Resource.Tags
        value: "@('BillingIdentifier=$(Tag_BillingIdentifier)'; 'EnvironmentType=${{ parameters.EnvironmentName }}';  'ApplicationName=$(Tag_ApplicationName)'; 'AppTechOwner=$(Tag_AppTechOwner)'; 'ApplicationOwner=$(Tag_ApplicationOwner)'; 'ApplicationID=$(Tag_ApplicationID)'; 'BusinessUnit=$(Tag_BusinessUnit)'; 'CostType=$(Tag_CostType)'; 'Tier=$(Tag_Tier)')"

      # AppInsights
      - name: AppInsightsName
        value: ${{ parameters.TeamName }}-${{ parameters.ProjectName }}
      - name: AppInsightsResourceGroupName
        value: $(ResourceGroup.Name)
      - name: AppInsightsLocation
        value: $(Location)
      - name: LogAnalyticsWorkspaceResourceId
        value: "/subscriptions/7cd65020-ab2c-46ba-956b-fe8351506430/resourcegroups/kpcshared-monitoring-dev/providers/microsoft.operationalinsights/workspaces/kpcshared-law-dev"

    strategy:
      runOnce:
        deploy:
          steps:
            # Download the artifact
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: "specific"
                project: "project"
                definition: "594"
                buildVersionToDownload: "latestFromBranch"
                branchName: "refs/heads/master"
                artifactName: "azdocs-src"
                targetPath: "$(Pipeline.Workspace)/AzDocs"
            # Call the different tasks you need to be able to deploy your resources
            - task: AzureCLI@2
              displayName: "Create ResourceGroup"
              condition: and(succeeded(), eq(variables['DeployInfra'], 'true'))
              inputs:
                azureSubscription: "${{ parameters.SubscriptionName }}"
                scriptType: pscore
                scriptPath: "$(Pipeline.Workspace)/AzDocs/Resourcegroup/Create-ResourceGroup.ps1"
                arguments: "-ResourceGroupLocation '$(ResourceGroupLocation)' -ResourceGroupName '$(ResourceGroupName)' -ResourceTags $(ResourceTags)"
            - task: AzureCLI@2
              displayName: "Create AppInsights Resource"
              condition: and(succeeded(), eq(variables['DeployInfra'], 'true'))
              inputs:
                azureSubscription: "${{ parameters.SubscriptionName }}"
                scriptType: pscore
                scriptPath: "$(Pipeline.Workspace)/AzDocs/AppInsights/Create-AppInsights-Resource.ps1"
                arguments: "-AppInsightsName '$(AppInsightsName)' -AppInsightsResourceGroupName '$(AppInsightsResourceGroupName)' -AppInsightsLocation '$(AppInsightsLocation)' -LogAnalyticsWorkspaceResourceId '$(LogAnalyticsWorkspaceResourceId)'"
